/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
)

// checks if the SyncStatusGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncStatusGet200Response{}

// SyncStatusGet200Response struct for SyncStatusGet200Response
type SyncStatusGet200Response struct {
	Syncs []SyncStatusGet200ResponseSyncsInner `json:"syncs,omitempty"`
}

// NewSyncStatusGet200Response instantiates a new SyncStatusGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncStatusGet200Response() *SyncStatusGet200Response {
	this := SyncStatusGet200Response{}
	return &this
}

// NewSyncStatusGet200ResponseWithDefaults instantiates a new SyncStatusGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncStatusGet200ResponseWithDefaults() *SyncStatusGet200Response {
	this := SyncStatusGet200Response{}
	return &this
}

// GetSyncs returns the Syncs field value if set, zero value otherwise.
func (o *SyncStatusGet200Response) GetSyncs() []SyncStatusGet200ResponseSyncsInner {
	if o == nil || IsNil(o.Syncs) {
		var ret []SyncStatusGet200ResponseSyncsInner
		return ret
	}
	return o.Syncs
}

// GetSyncsOk returns a tuple with the Syncs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200Response) GetSyncsOk() ([]SyncStatusGet200ResponseSyncsInner, bool) {
	if o == nil || IsNil(o.Syncs) {
		return nil, false
	}
	return o.Syncs, true
}

// HasSyncs returns a boolean if a field has been set.
func (o *SyncStatusGet200Response) HasSyncs() bool {
	if o != nil && !IsNil(o.Syncs) {
		return true
	}

	return false
}

// SetSyncs gets a reference to the given []SyncStatusGet200ResponseSyncsInner and assigns it to the Syncs field.
func (o *SyncStatusGet200Response) SetSyncs(v []SyncStatusGet200ResponseSyncsInner) {
	o.Syncs = v
}

func (o SyncStatusGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncStatusGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Syncs) {
		toSerialize["syncs"] = o.Syncs
	}
	return toSerialize, nil
}

type NullableSyncStatusGet200Response struct {
	value *SyncStatusGet200Response
	isSet bool
}

func (v NullableSyncStatusGet200Response) Get() *SyncStatusGet200Response {
	return v.value
}

func (v *NullableSyncStatusGet200Response) Set(val *SyncStatusGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncStatusGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncStatusGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncStatusGet200Response(val *SyncStatusGet200Response) *NullableSyncStatusGet200Response {
	return &NullableSyncStatusGet200Response{value: val, isSet: true}
}

func (v NullableSyncStatusGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncStatusGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


