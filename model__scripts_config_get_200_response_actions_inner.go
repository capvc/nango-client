/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
)

// checks if the ScriptsConfigGet200ResponseActionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScriptsConfigGet200ResponseActionsInner{}

// ScriptsConfigGet200ResponseActionsInner struct for ScriptsConfigGet200ResponseActionsInner
type ScriptsConfigGet200ResponseActionsInner struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Models []ScriptsConfigGet200ResponseActionsInnerModelsInner `json:"models,omitempty"`
	LastDeployed *string `json:"last_deployed,omitempty"`
	IsPublic *bool `json:"is_public,omitempty"`
	PreBuilt *bool `json:"pre_built,omitempty"`
	Version *string `json:"version,omitempty"`
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	Input map[string]interface{} `json:"input,omitempty"`
	Returns map[string]interface{} `json:"returns,omitempty"`
	Description *string `json:"description,omitempty"`
	Scopes []string `json:"scopes,omitempty"`
	Endpoints []map[string]interface{} `json:"endpoints,omitempty"`
	NangoYamlVersion *string `json:"nango_yaml_version,omitempty"`
}

// NewScriptsConfigGet200ResponseActionsInner instantiates a new ScriptsConfigGet200ResponseActionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScriptsConfigGet200ResponseActionsInner() *ScriptsConfigGet200ResponseActionsInner {
	this := ScriptsConfigGet200ResponseActionsInner{}
	return &this
}

// NewScriptsConfigGet200ResponseActionsInnerWithDefaults instantiates a new ScriptsConfigGet200ResponseActionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScriptsConfigGet200ResponseActionsInnerWithDefaults() *ScriptsConfigGet200ResponseActionsInner {
	this := ScriptsConfigGet200ResponseActionsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetType(v string) {
	o.Type = &v
}

// GetModels returns the Models field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetModels() []ScriptsConfigGet200ResponseActionsInnerModelsInner {
	if o == nil || IsNil(o.Models) {
		var ret []ScriptsConfigGet200ResponseActionsInnerModelsInner
		return ret
	}
	return o.Models
}

// GetModelsOk returns a tuple with the Models field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetModelsOk() ([]ScriptsConfigGet200ResponseActionsInnerModelsInner, bool) {
	if o == nil || IsNil(o.Models) {
		return nil, false
	}
	return o.Models, true
}

// HasModels returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasModels() bool {
	if o != nil && !IsNil(o.Models) {
		return true
	}

	return false
}

// SetModels gets a reference to the given []ScriptsConfigGet200ResponseActionsInnerModelsInner and assigns it to the Models field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetModels(v []ScriptsConfigGet200ResponseActionsInnerModelsInner) {
	o.Models = v
}

// GetLastDeployed returns the LastDeployed field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetLastDeployed() string {
	if o == nil || IsNil(o.LastDeployed) {
		var ret string
		return ret
	}
	return *o.LastDeployed
}

// GetLastDeployedOk returns a tuple with the LastDeployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetLastDeployedOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeployed) {
		return nil, false
	}
	return o.LastDeployed, true
}

// HasLastDeployed returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasLastDeployed() bool {
	if o != nil && !IsNil(o.LastDeployed) {
		return true
	}

	return false
}

// SetLastDeployed gets a reference to the given string and assigns it to the LastDeployed field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetLastDeployed(v string) {
	o.LastDeployed = &v
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetIsPublic() bool {
	if o == nil || IsNil(o.IsPublic) {
		var ret bool
		return ret
	}
	return *o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetIsPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublic) {
		return nil, false
	}
	return o.IsPublic, true
}

// HasIsPublic returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasIsPublic() bool {
	if o != nil && !IsNil(o.IsPublic) {
		return true
	}

	return false
}

// SetIsPublic gets a reference to the given bool and assigns it to the IsPublic field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetIsPublic(v bool) {
	o.IsPublic = &v
}

// GetPreBuilt returns the PreBuilt field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetPreBuilt() bool {
	if o == nil || IsNil(o.PreBuilt) {
		var ret bool
		return ret
	}
	return *o.PreBuilt
}

// GetPreBuiltOk returns a tuple with the PreBuilt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetPreBuiltOk() (*bool, bool) {
	if o == nil || IsNil(o.PreBuilt) {
		return nil, false
	}
	return o.PreBuilt, true
}

// HasPreBuilt returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasPreBuilt() bool {
	if o != nil && !IsNil(o.PreBuilt) {
		return true
	}

	return false
}

// SetPreBuilt gets a reference to the given bool and assigns it to the PreBuilt field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetPreBuilt(v bool) {
	o.PreBuilt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetVersion(v string) {
	o.Version = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetInput() map[string]interface{} {
	if o == nil || IsNil(o.Input) {
		var ret map[string]interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetInputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return map[string]interface{}{}, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given map[string]interface{} and assigns it to the Input field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetInput(v map[string]interface{}) {
	o.Input = v
}

// GetReturns returns the Returns field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetReturns() map[string]interface{} {
	if o == nil || IsNil(o.Returns) {
		var ret map[string]interface{}
		return ret
	}
	return o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetReturnsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Returns) {
		return map[string]interface{}{}, false
	}
	return o.Returns, true
}

// HasReturns returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasReturns() bool {
	if o != nil && !IsNil(o.Returns) {
		return true
	}

	return false
}

// SetReturns gets a reference to the given map[string]interface{} and assigns it to the Returns field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetReturns(v map[string]interface{}) {
	o.Returns = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetDescription(v string) {
	o.Description = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetScopes(v []string) {
	o.Scopes = v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetEndpoints() []map[string]interface{} {
	if o == nil || IsNil(o.Endpoints) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetEndpointsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []map[string]interface{} and assigns it to the Endpoints field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetEndpoints(v []map[string]interface{}) {
	o.Endpoints = v
}

// GetNangoYamlVersion returns the NangoYamlVersion field value if set, zero value otherwise.
func (o *ScriptsConfigGet200ResponseActionsInner) GetNangoYamlVersion() string {
	if o == nil || IsNil(o.NangoYamlVersion) {
		var ret string
		return ret
	}
	return *o.NangoYamlVersion
}

// GetNangoYamlVersionOk returns a tuple with the NangoYamlVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) GetNangoYamlVersionOk() (*string, bool) {
	if o == nil || IsNil(o.NangoYamlVersion) {
		return nil, false
	}
	return o.NangoYamlVersion, true
}

// HasNangoYamlVersion returns a boolean if a field has been set.
func (o *ScriptsConfigGet200ResponseActionsInner) HasNangoYamlVersion() bool {
	if o != nil && !IsNil(o.NangoYamlVersion) {
		return true
	}

	return false
}

// SetNangoYamlVersion gets a reference to the given string and assigns it to the NangoYamlVersion field.
func (o *ScriptsConfigGet200ResponseActionsInner) SetNangoYamlVersion(v string) {
	o.NangoYamlVersion = &v
}

func (o ScriptsConfigGet200ResponseActionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScriptsConfigGet200ResponseActionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Models) {
		toSerialize["models"] = o.Models
	}
	if !IsNil(o.LastDeployed) {
		toSerialize["last_deployed"] = o.LastDeployed
	}
	if !IsNil(o.IsPublic) {
		toSerialize["is_public"] = o.IsPublic
	}
	if !IsNil(o.PreBuilt) {
		toSerialize["pre_built"] = o.PreBuilt
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.Returns) {
		toSerialize["returns"] = o.Returns
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.NangoYamlVersion) {
		toSerialize["nango_yaml_version"] = o.NangoYamlVersion
	}
	return toSerialize, nil
}

type NullableScriptsConfigGet200ResponseActionsInner struct {
	value *ScriptsConfigGet200ResponseActionsInner
	isSet bool
}

func (v NullableScriptsConfigGet200ResponseActionsInner) Get() *ScriptsConfigGet200ResponseActionsInner {
	return v.value
}

func (v *NullableScriptsConfigGet200ResponseActionsInner) Set(val *ScriptsConfigGet200ResponseActionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableScriptsConfigGet200ResponseActionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableScriptsConfigGet200ResponseActionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScriptsConfigGet200ResponseActionsInner(val *ScriptsConfigGet200ResponseActionsInner) *NullableScriptsConfigGet200ResponseActionsInner {
	return &NullableScriptsConfigGet200ResponseActionsInner{value: val, isSet: true}
}

func (v NullableScriptsConfigGet200ResponseActionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScriptsConfigGet200ResponseActionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


