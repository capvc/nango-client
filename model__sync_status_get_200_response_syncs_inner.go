/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
)

// checks if the SyncStatusGet200ResponseSyncsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncStatusGet200ResponseSyncsInner{}

// SyncStatusGet200ResponseSyncsInner struct for SyncStatusGet200ResponseSyncsInner
type SyncStatusGet200ResponseSyncsInner struct {
	// The unique identifier for the sync.
	Id *string `json:"id,omitempty"`
	// The name of the sync.
	Name *string `json:"name,omitempty"`
	// The current status of the sync.
	Status *string `json:"status,omitempty"`
	// The most recent sync type completed
	Type *string `json:"type,omitempty"`
	// ISO string of the most recently completed sync
	FinishedAt *string `json:"finishedAt,omitempty"`
	// ISO string of the next scheduled sync time
	NextScheduledSyncAt *string `json:"nextScheduledSyncAt,omitempty"`
	// The execution frequency of the sync
	Frequency *string `json:"frequency,omitempty"`
	// Additional information regarding the latest result of the sync. Contains a model name with added, updated and deleted records
	LatestResult map[string]interface{} `json:"latestResult,omitempty"`
}

// NewSyncStatusGet200ResponseSyncsInner instantiates a new SyncStatusGet200ResponseSyncsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncStatusGet200ResponseSyncsInner() *SyncStatusGet200ResponseSyncsInner {
	this := SyncStatusGet200ResponseSyncsInner{}
	return &this
}

// NewSyncStatusGet200ResponseSyncsInnerWithDefaults instantiates a new SyncStatusGet200ResponseSyncsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncStatusGet200ResponseSyncsInnerWithDefaults() *SyncStatusGet200ResponseSyncsInner {
	this := SyncStatusGet200ResponseSyncsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SyncStatusGet200ResponseSyncsInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SyncStatusGet200ResponseSyncsInner) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SyncStatusGet200ResponseSyncsInner) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SyncStatusGet200ResponseSyncsInner) SetType(v string) {
	o.Type = &v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetFinishedAt() string {
	if o == nil || IsNil(o.FinishedAt) {
		var ret string
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetFinishedAtOk() (*string, bool) {
	if o == nil || IsNil(o.FinishedAt) {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasFinishedAt() bool {
	if o != nil && !IsNil(o.FinishedAt) {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given string and assigns it to the FinishedAt field.
func (o *SyncStatusGet200ResponseSyncsInner) SetFinishedAt(v string) {
	o.FinishedAt = &v
}

// GetNextScheduledSyncAt returns the NextScheduledSyncAt field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetNextScheduledSyncAt() string {
	if o == nil || IsNil(o.NextScheduledSyncAt) {
		var ret string
		return ret
	}
	return *o.NextScheduledSyncAt
}

// GetNextScheduledSyncAtOk returns a tuple with the NextScheduledSyncAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetNextScheduledSyncAtOk() (*string, bool) {
	if o == nil || IsNil(o.NextScheduledSyncAt) {
		return nil, false
	}
	return o.NextScheduledSyncAt, true
}

// HasNextScheduledSyncAt returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasNextScheduledSyncAt() bool {
	if o != nil && !IsNil(o.NextScheduledSyncAt) {
		return true
	}

	return false
}

// SetNextScheduledSyncAt gets a reference to the given string and assigns it to the NextScheduledSyncAt field.
func (o *SyncStatusGet200ResponseSyncsInner) SetNextScheduledSyncAt(v string) {
	o.NextScheduledSyncAt = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetFrequency() string {
	if o == nil || IsNil(o.Frequency) {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *SyncStatusGet200ResponseSyncsInner) SetFrequency(v string) {
	o.Frequency = &v
}

// GetLatestResult returns the LatestResult field value if set, zero value otherwise.
func (o *SyncStatusGet200ResponseSyncsInner) GetLatestResult() map[string]interface{} {
	if o == nil || IsNil(o.LatestResult) {
		var ret map[string]interface{}
		return ret
	}
	return o.LatestResult
}

// GetLatestResultOk returns a tuple with the LatestResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncStatusGet200ResponseSyncsInner) GetLatestResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LatestResult) {
		return map[string]interface{}{}, false
	}
	return o.LatestResult, true
}

// HasLatestResult returns a boolean if a field has been set.
func (o *SyncStatusGet200ResponseSyncsInner) HasLatestResult() bool {
	if o != nil && !IsNil(o.LatestResult) {
		return true
	}

	return false
}

// SetLatestResult gets a reference to the given map[string]interface{} and assigns it to the LatestResult field.
func (o *SyncStatusGet200ResponseSyncsInner) SetLatestResult(v map[string]interface{}) {
	o.LatestResult = v
}

func (o SyncStatusGet200ResponseSyncsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncStatusGet200ResponseSyncsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.FinishedAt) {
		toSerialize["finishedAt"] = o.FinishedAt
	}
	if !IsNil(o.NextScheduledSyncAt) {
		toSerialize["nextScheduledSyncAt"] = o.NextScheduledSyncAt
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.LatestResult) {
		toSerialize["latestResult"] = o.LatestResult
	}
	return toSerialize, nil
}

type NullableSyncStatusGet200ResponseSyncsInner struct {
	value *SyncStatusGet200ResponseSyncsInner
	isSet bool
}

func (v NullableSyncStatusGet200ResponseSyncsInner) Get() *SyncStatusGet200ResponseSyncsInner {
	return v.value
}

func (v *NullableSyncStatusGet200ResponseSyncsInner) Set(val *SyncStatusGet200ResponseSyncsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncStatusGet200ResponseSyncsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncStatusGet200ResponseSyncsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncStatusGet200ResponseSyncsInner(val *SyncStatusGet200ResponseSyncsInner) *NullableSyncStatusGet200ResponseSyncsInner {
	return &NullableSyncStatusGet200ResponseSyncsInner{value: val, isSet: true}
}

func (v NullableSyncStatusGet200ResponseSyncsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncStatusGet200ResponseSyncsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


