/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
)

// checks if the ConnectionMetadataPost201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionMetadataPost201Response{}

// ConnectionMetadataPost201Response struct for ConnectionMetadataPost201Response
type ConnectionMetadataPost201Response struct {
	ConnectionId *ConnectionMetadataPost201ResponseConnectionId `json:"connection_id,omitempty"`
	// The integration ID used to create the connection (aka Unique Key).
	ProviderConfigKey *string `json:"provider_config_key,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewConnectionMetadataPost201Response instantiates a new ConnectionMetadataPost201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionMetadataPost201Response() *ConnectionMetadataPost201Response {
	this := ConnectionMetadataPost201Response{}
	return &this
}

// NewConnectionMetadataPost201ResponseWithDefaults instantiates a new ConnectionMetadataPost201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionMetadataPost201ResponseWithDefaults() *ConnectionMetadataPost201Response {
	this := ConnectionMetadataPost201Response{}
	return &this
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *ConnectionMetadataPost201Response) GetConnectionId() ConnectionMetadataPost201ResponseConnectionId {
	if o == nil || IsNil(o.ConnectionId) {
		var ret ConnectionMetadataPost201ResponseConnectionId
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionMetadataPost201Response) GetConnectionIdOk() (*ConnectionMetadataPost201ResponseConnectionId, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *ConnectionMetadataPost201Response) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given ConnectionMetadataPost201ResponseConnectionId and assigns it to the ConnectionId field.
func (o *ConnectionMetadataPost201Response) SetConnectionId(v ConnectionMetadataPost201ResponseConnectionId) {
	o.ConnectionId = &v
}

// GetProviderConfigKey returns the ProviderConfigKey field value if set, zero value otherwise.
func (o *ConnectionMetadataPost201Response) GetProviderConfigKey() string {
	if o == nil || IsNil(o.ProviderConfigKey) {
		var ret string
		return ret
	}
	return *o.ProviderConfigKey
}

// GetProviderConfigKeyOk returns a tuple with the ProviderConfigKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionMetadataPost201Response) GetProviderConfigKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderConfigKey) {
		return nil, false
	}
	return o.ProviderConfigKey, true
}

// HasProviderConfigKey returns a boolean if a field has been set.
func (o *ConnectionMetadataPost201Response) HasProviderConfigKey() bool {
	if o != nil && !IsNil(o.ProviderConfigKey) {
		return true
	}

	return false
}

// SetProviderConfigKey gets a reference to the given string and assigns it to the ProviderConfigKey field.
func (o *ConnectionMetadataPost201Response) SetProviderConfigKey(v string) {
	o.ProviderConfigKey = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ConnectionMetadataPost201Response) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionMetadataPost201Response) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ConnectionMetadataPost201Response) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ConnectionMetadataPost201Response) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o ConnectionMetadataPost201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionMetadataPost201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.ProviderConfigKey) {
		toSerialize["provider_config_key"] = o.ProviderConfigKey
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableConnectionMetadataPost201Response struct {
	value *ConnectionMetadataPost201Response
	isSet bool
}

func (v NullableConnectionMetadataPost201Response) Get() *ConnectionMetadataPost201Response {
	return v.value
}

func (v *NullableConnectionMetadataPost201Response) Set(val *ConnectionMetadataPost201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionMetadataPost201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionMetadataPost201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionMetadataPost201Response(val *ConnectionMetadataPost201Response) *NullableConnectionMetadataPost201Response {
	return &NullableConnectionMetadataPost201Response{value: val, isSet: true}
}

func (v NullableConnectionMetadataPost201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionMetadataPost201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


