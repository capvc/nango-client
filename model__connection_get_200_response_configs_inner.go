/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConnectionGet200ResponseConfigsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionGet200ResponseConfigsInner{}

// ConnectionGet200ResponseConfigsInner struct for ConnectionGet200ResponseConfigsInner
type ConnectionGet200ResponseConfigsInner struct {
	// The internal Nango ID used for the connection.
	Id int32 `json:"id"`
	// The connection ID used to create the connection.
	ConnectionId string `json:"connection_id"`
	// The Nango API Configuration.
	Provider string `json:"provider"`
	// The integration ID used to create the connection (aka Unique Key, Provider Config Key).
	ProviderConfigKey string `json:"provider_config_key"`
	// Connection creation date.
	Created string `json:"created"`
	// Custom metadata attached to the connection
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

type _ConnectionGet200ResponseConfigsInner ConnectionGet200ResponseConfigsInner

// NewConnectionGet200ResponseConfigsInner instantiates a new ConnectionGet200ResponseConfigsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionGet200ResponseConfigsInner(id int32, connectionId string, provider string, providerConfigKey string, created string) *ConnectionGet200ResponseConfigsInner {
	this := ConnectionGet200ResponseConfigsInner{}
	this.Id = id
	this.ConnectionId = connectionId
	this.Provider = provider
	this.ProviderConfigKey = providerConfigKey
	this.Created = created
	return &this
}

// NewConnectionGet200ResponseConfigsInnerWithDefaults instantiates a new ConnectionGet200ResponseConfigsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionGet200ResponseConfigsInnerWithDefaults() *ConnectionGet200ResponseConfigsInner {
	this := ConnectionGet200ResponseConfigsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectionGet200ResponseConfigsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectionGet200ResponseConfigsInner) SetId(v int32) {
	o.Id = v
}

// GetConnectionId returns the ConnectionId field value
func (o *ConnectionGet200ResponseConfigsInner) GetConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionId, true
}

// SetConnectionId sets field value
func (o *ConnectionGet200ResponseConfigsInner) SetConnectionId(v string) {
	o.ConnectionId = v
}

// GetProvider returns the Provider field value
func (o *ConnectionGet200ResponseConfigsInner) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *ConnectionGet200ResponseConfigsInner) SetProvider(v string) {
	o.Provider = v
}

// GetProviderConfigKey returns the ProviderConfigKey field value
func (o *ConnectionGet200ResponseConfigsInner) GetProviderConfigKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderConfigKey
}

// GetProviderConfigKeyOk returns a tuple with the ProviderConfigKey field value
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetProviderConfigKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderConfigKey, true
}

// SetProviderConfigKey sets field value
func (o *ConnectionGet200ResponseConfigsInner) SetProviderConfigKey(v string) {
	o.ProviderConfigKey = v
}

// GetCreated returns the Created field value
func (o *ConnectionGet200ResponseConfigsInner) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ConnectionGet200ResponseConfigsInner) SetCreated(v string) {
	o.Created = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ConnectionGet200ResponseConfigsInner) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionGet200ResponseConfigsInner) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ConnectionGet200ResponseConfigsInner) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ConnectionGet200ResponseConfigsInner) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o ConnectionGet200ResponseConfigsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionGet200ResponseConfigsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["connection_id"] = o.ConnectionId
	toSerialize["provider"] = o.Provider
	toSerialize["provider_config_key"] = o.ProviderConfigKey
	toSerialize["created"] = o.Created
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

func (o *ConnectionGet200ResponseConfigsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"connection_id",
		"provider",
		"provider_config_key",
		"created",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectionGet200ResponseConfigsInner := _ConnectionGet200ResponseConfigsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectionGet200ResponseConfigsInner)

	if err != nil {
		return err
	}

	*o = ConnectionGet200ResponseConfigsInner(varConnectionGet200ResponseConfigsInner)

	return err
}

type NullableConnectionGet200ResponseConfigsInner struct {
	value *ConnectionGet200ResponseConfigsInner
	isSet bool
}

func (v NullableConnectionGet200ResponseConfigsInner) Get() *ConnectionGet200ResponseConfigsInner {
	return v.value
}

func (v *NullableConnectionGet200ResponseConfigsInner) Set(val *ConnectionGet200ResponseConfigsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionGet200ResponseConfigsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionGet200ResponseConfigsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionGet200ResponseConfigsInner(val *ConnectionGet200ResponseConfigsInner) *NullableConnectionGet200ResponseConfigsInner {
	return &NullableConnectionGet200ResponseConfigsInner{value: val, isSet: true}
}

func (v NullableConnectionGet200ResponseConfigsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionGet200ResponseConfigsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


