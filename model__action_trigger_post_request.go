/*
Nango API

Nango API specs used to authorize & sync data with external APIs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nango

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ActionTriggerPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionTriggerPostRequest{}

// ActionTriggerPostRequest struct for ActionTriggerPostRequest
type ActionTriggerPostRequest struct {
	// The name of the action to trigger.
	ActionName string `json:"action_name"`
	// The necessary input for your action's 'runAction' function.
	Input map[string]interface{} `json:"input,omitempty"`
}

type _ActionTriggerPostRequest ActionTriggerPostRequest

// NewActionTriggerPostRequest instantiates a new ActionTriggerPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionTriggerPostRequest(actionName string) *ActionTriggerPostRequest {
	this := ActionTriggerPostRequest{}
	this.ActionName = actionName
	return &this
}

// NewActionTriggerPostRequestWithDefaults instantiates a new ActionTriggerPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionTriggerPostRequestWithDefaults() *ActionTriggerPostRequest {
	this := ActionTriggerPostRequest{}
	return &this
}

// GetActionName returns the ActionName field value
func (o *ActionTriggerPostRequest) GetActionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionName
}

// GetActionNameOk returns a tuple with the ActionName field value
// and a boolean to check if the value has been set.
func (o *ActionTriggerPostRequest) GetActionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionName, true
}

// SetActionName sets field value
func (o *ActionTriggerPostRequest) SetActionName(v string) {
	o.ActionName = v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *ActionTriggerPostRequest) GetInput() map[string]interface{} {
	if o == nil || IsNil(o.Input) {
		var ret map[string]interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionTriggerPostRequest) GetInputOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return map[string]interface{}{}, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *ActionTriggerPostRequest) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given map[string]interface{} and assigns it to the Input field.
func (o *ActionTriggerPostRequest) SetInput(v map[string]interface{}) {
	o.Input = v
}

func (o ActionTriggerPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionTriggerPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action_name"] = o.ActionName
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	return toSerialize, nil
}

func (o *ActionTriggerPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActionTriggerPostRequest := _ActionTriggerPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActionTriggerPostRequest)

	if err != nil {
		return err
	}

	*o = ActionTriggerPostRequest(varActionTriggerPostRequest)

	return err
}

type NullableActionTriggerPostRequest struct {
	value *ActionTriggerPostRequest
	isSet bool
}

func (v NullableActionTriggerPostRequest) Get() *ActionTriggerPostRequest {
	return v.value
}

func (v *NullableActionTriggerPostRequest) Set(val *ActionTriggerPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionTriggerPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionTriggerPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionTriggerPostRequest(val *ActionTriggerPostRequest) *NullableActionTriggerPostRequest {
	return &NullableActionTriggerPostRequest{value: val, isSet: true}
}

func (v NullableActionTriggerPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionTriggerPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


